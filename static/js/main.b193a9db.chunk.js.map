{"version":3,"sources":["components/Section/Section.js","components/Feedback/Feedback.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constants.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackBtn","feedback","onLeaveFeedback","type","onClick","FeedbackOptions","options","map","option","Notification","message","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","shortid","generate","FEEDBACK_OPTIONS","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Feedback","e","target","dataset","state","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCJDC,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,wBAAQC,KAAK,SAAS,gBAAeF,EAAUG,QAASF,EAAxD,SACGD,KAoBQI,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASJ,EAAsB,EAAtBA,gBAClC,OAAOI,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAEEP,SAAUO,EACVN,gBAAiBA,GAFZM,OCLIC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBCuC3BC,EAnCI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,2BAIA,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAoCH,IAA3BK,IAAQC,YACjB,2CAAuCL,IAA9BI,IAAQC,YACjB,uCAAmCJ,IAA1BG,IAAQC,YACjB,yCAAqCH,IAA5BE,IAAQC,YACjB,qDACsBF,EADtB,MAASC,IAAQC,eAKV,IAAVH,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BC5B/BS,EAAmB,CAAC,OAAQ,UAAW,OCQrC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAsBMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAW1B,OACE,gCACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC4B,EAAD,CACEpB,QAASa,EACTjB,gBArCe,SAAAyB,GACrB,IAAQ1B,EAAa0B,EAAEC,OAAOC,QAAtB5B,SAES,SAAbA,EAMa,YAAbA,EAKa,QAAbA,GACFuB,GAAO,SAAAM,GAAK,OAAIA,EAAQ,KALxBP,GAAW,SAAAO,GAAK,OAAIA,EAAQ,KAN5BR,GAAQ,SAAAQ,GAAK,OAAIA,EAAQ,UAoCzB,cAAC,EAAD,CAAShC,MAAM,aAAf,SACE,cAAC,EAAD,CACEc,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,2BAtBgC,WACtC,IAAMD,EAAQU,IAId,OAFeV,EAAQgB,KAAKC,MAAOpB,EAAOG,EAAS,KAAO,EAmBxBkB,UCvDtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.b193a9db.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nconst FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button type=\"button\" data-feedback={feedback} onClick={onLeaveFeedback}>\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map(option => (\n    <FeedbackBtn\n      key={option}\n      feedback={option}\n      onLeaveFeedback={onLeaveFeedback}\n    />\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  option: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\n\nimport Notification from '../Notification';\n\nimport shortid from 'shortid';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveFeedbackPercentage,\n}) => {\n  // const liNameId = shortid.generate();\n\n  return (\n    <>\n      {total > 0 && (\n        <ul>\n          <li key={shortid.generate()}>Good: {good}</li>\n          <li key={shortid.generate()}>Neutral: {neutral}</li>\n          <li key={shortid.generate()}>Bad: {bad}</li>\n          <li key={shortid.generate()}>Total: {total}</li>\n          <li key={shortid.generate()}>\n            Positive feedback: {positiveFeedbackPercentage}%\n          </li>\n        </ul>\n      )}\n      {total === 0 && <Notification message=\"No feedback given\" />}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\n","import React, { useState } from 'react';\n\nimport Section from './Section';\nimport FeedbackOptions from './Feedback';\nimport Statistics from './Statistics';\n\nimport { FEEDBACK_OPTIONS } from '../data/constants';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleFeedback = e => {\n    const { feedback } = e.target.dataset;\n\n    if (feedback === 'good') {\n      setGood(state => state + 1);\n\n      return;\n    }\n\n    if (feedback === 'neutral') {\n      setNeutral(state => state + 1);\n      return;\n    }\n\n    if (feedback === 'bad') {\n      setBad(state => state + 1);\n      return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n\n    const result = total ? Math.round((good / total) * 100) : 0;\n    // console.log(result);\n    return result;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={FEEDBACK_OPTIONS}\n          onLeaveFeedback={handleFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const link = React.createElement(\n//   'a',\n//   { href: 'reactjs.org', target: '_blank' },\n//   'Ссылочка',\n// );\n\n// const jsxLink = <a href=\"reactjs.org\">СсылочкаJsx</a>;\n\n// // console.log(link);\n// console.log(jsxLink);\n\n// ReactDOM.render(link, document.getElementById('root'));\n"],"sourceRoot":""}